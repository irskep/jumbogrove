[
  {
    "name": "Character#addToQuality",
    "filePath": "src/jg/character.js",
    "lines": [
      {
        "lineNumber": 146,
        "line": "    /**"
      },
      {
        "lineNumber": 147,
        "line": "     * Add an integer value to the given quality."
      },
      {
        "lineNumber": 148,
        "line": "     * "
      },
      {
        "lineNumber": 149,
        "line": "     * @param {string} id ID of the quality to modify on this character"
      },
      {
        "lineNumber": 150,
        "line": "     * @param {number} value Amount to add"
      },
      {
        "lineNumber": 151,
        "line": "     * @returns {number} The new value"
      },
      {
        "lineNumber": 152,
        "line": "     */"
      },
      {
        "lineNumber": 153,
        "line": "    addToQuality(id, delta) {"
      }
    ],
    "codeParams": [
      "id",
      "delta"
    ],
    "docParams": [
      "id",
      "value"
    ]
  },
  {
    "name": "ui#renderMarkdownTemplateMaybeInline",
    "filePath": "src/jg/dataui.js",
    "lines": [
      {
        "lineNumber": 185,
        "line": "  /**"
      },
      {
        "lineNumber": 186,
        "line": "   * Like {@link renderMarkdownTemplate}, but automatically sets `inline` flag based on"
      },
      {
        "lineNumber": 187,
        "line": "   * presence of line breaks."
      },
      {
        "lineNumber": 188,
        "line": "   * @param {string} src "
      },
      {
        "lineNumber": 189,
        "line": "   * @param {Map<string,*>} args Additional template context"
      },
      {
        "lineNumber": 190,
        "line": "   * @param {Boolean} inline If true, do not parse any block-level markup or wrap in a paragraph."
      },
      {
        "lineNumber": 191,
        "line": "   */"
      },
      {
        "lineNumber": 192,
        "line": "  renderMarkdownTemplateMaybeInline(src, args = null) {"
      }
    ],
    "codeParams": [
      "src",
      "args"
    ],
    "docParams": [
      "src",
      "args",
      "inline"
    ]
  },
  {
    "name": "model#do",
    "filePath": "src/jg/model.js",
    "lines": [
      {
        "lineNumber": 73,
        "line": "    /**"
      },
      {
        "lineNumber": 74,
        "line": "     * Follow a Jumbo Grove link (`@situation-id` or `>action`)."
      },
      {
        "lineNumber": 75,
        "line": "     * @param {command} string"
      },
      {
        "lineNumber": 76,
        "line": "     */"
      },
      {
        "lineNumber": 77,
        "line": "    do(...args) {"
      }
    ],
    "codeParams": [
      "args"
    ],
    "docParams": [
      "string"
    ]
  },
  {
    "name": "model#goTo",
    "filePath": "src/jg/model.js",
    "lines": [
      {
        "lineNumber": 81,
        "line": "    /**"
      },
      {
        "lineNumber": 82,
        "line": "     * Go to the given sitaution (no `@`)."
      },
      {
        "lineNumber": 83,
        "line": "     * @param {string} id"
      },
      {
        "lineNumber": 84,
        "line": "     */"
      },
      {
        "lineNumber": 85,
        "line": "    goTo(...args) {"
      }
    ],
    "codeParams": [
      "args"
    ],
    "docParams": [
      "id"
    ]
  },
  {
    "name": "model#isManagedLink",
    "filePath": "src/jg/model.js",
    "lines": [
      {
        "lineNumber": 89,
        "line": "    /**"
      },
      {
        "lineNumber": 90,
        "line": "     * Returns true iff the given string can be handled by Jumbo Grove (rather than being a normal HTML link)"
      },
      {
        "lineNumber": 91,
        "line": "     * @param {string} string A string to check"
      },
      {
        "lineNumber": 92,
        "line": "     * @returns {Boolean} "
      },
      {
        "lineNumber": 93,
        "line": "     */"
      },
      {
        "lineNumber": 94,
        "line": "    isManagedLink(...args) {"
      }
    ],
    "codeParams": [
      "args"
    ],
    "docParams": [
      "string"
    ]
  }
]